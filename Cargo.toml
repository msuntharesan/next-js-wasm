[package]
name = "wasm-example"
version = "0.1.0"
authors = ["Suntharesan Mohan <suntharesan.mohan@gmail.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[build]
target = "wasm32-unknown-unknown"

[dependencies]
js-sys = "0.3"
serde = "1.0"
serde_derive = "1.0"
serde-wasm-bindgen = "0.1"
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
console_error_panic_hook = "0.1"
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4", optional = true }
web-sys = { version = "0.3", features = ["console", "Window"] }
# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3"
futures = "0.3"
wasm-bindgen-futures = "0.4"

[features]
# If you uncomment this line, it will enable `wee_alloc`:
default = ["wee_alloc"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
